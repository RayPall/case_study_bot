import streamlit as st
import requests
from docx import Document
import base64
import io

st.set_page_config(page_title="Gener√°tor p≈ô√≠padov√Ωch studi√≠", layout="centered")
st.title("üìÑ Gener√°tor p≈ô√≠padov√Ωch studi√≠ ‚Üí JSON pro Make")

# 1) V√Ωbƒõr ≈°ablony
st.subheader("1. Vyber ≈°ablonu")
template = st.radio("Zvol verzi ≈°ablony:", ["Bright", "Soft"], horizontal=True)

# 2) Nahr√°n√≠ DOCX s obsahem
st.subheader("2. Nahraj .docx soubor s textem p≈ô√≠padov√© studie")
docx_file = st.file_uploader("Text p≈ô√≠padov√© studie", type="docx", key="docx")

# 3) Nahr√°n√≠ fotodokumentace (volitelnƒõ)
st.subheader("3. Nahraj fotodokumentaci (voliteln√©)")
images = st.file_uploader(
    "Obr√°zky (JPG, PNG)", type=["jpg", "jpeg", "png"], accept_multiple_files=True, key="images"
)

# 4) Webhook URL
st.subheader("4. Make webhook URL")
webhook_url = "https://hook.eu2.make.com/hjbp2yaxrmiprs6hrchfz0lxhetbbslt"

# Pomocn√° funkce: DOCX ‚Üí JSON (podle nadpis≈Ø)
def parse_docx_to_json(docx_bytes):
    doc = Document(io.BytesIO(docx_bytes))
    data = {}
    current_heading = None

    mapping = {
        "Z√°kazn√≠k": "zakaznik",
        "V√Ωzva": "vyzva",
        "≈òe≈°en√≠": "reseni",
        "V√Ωsledky": "vysledky",
        "O spoleƒçnosti": "spolecnost"
    }

    for para in doc.paragraphs:
        text = para.text.strip()
        if not text:
            continue
        if para.style and para.style.name and para.style.name.startswith("Heading"):
            current_heading = mapping.get(text, None)
        elif current_heading:
            if current_heading not in data:
                data[current_heading] = text
            else:
                data[current_heading] += "\n" + text

    return data

# 5) Zpracov√°n√≠ ‚Üí JSON
st.subheader("5. Zpracov√°n√≠")
include_images = st.checkbox("Zahrnout obr√°zky do JSON (base64)")

template_selected = template.lower()

if st.button("üß† Vytvo≈ôit JSON n√°hled"):
    if not docx_file:
        st.error("Nejprve pros√≠m nahraj .docx soubor.")
    else:
        parsed_data = parse_docx_to_json(docx_file.getvalue())
        payload = {
            "template": template_selected,
            "data": parsed_data,
        }
        if include_images and images:
            imgs = []
            for i, img in enumerate(images):
                b64 = base64.b64encode(img.getvalue()).decode("utf-8")
                imgs.append({
                    "filename": img.name,
                    "content_type": img.type,
                    "content_base64": b64,
                })
            payload["images"] = imgs
        st.success("‚úÖ JSON p≈ôipraven. Zkontroluj obsah n√≠≈æe.")
        st.json(payload)
        st.session_state["last_payload"] = payload

# 6) Odesl√°n√≠ na Make webhook (application/json)
if st.button("üöÄ Odeslat JSON do Make"):
    payload = st.session_state.get("last_payload")
    if not payload:
        st.error("Nejprve vytvo≈ô JSON n√°hled (tlaƒç√≠tko v√Ω≈°e).")
    elif not webhook_url:
        st.error("Zadej pros√≠m Make webhook URL.")
    else:
        try:
            resp = requests.post(webhook_url, json=payload, timeout=30)
            if 200 <= resp.status_code < 300:
                st.success(f"‚úÖ Odesl√°no. HTTP {resp.status_code}")
                # Volitelnƒõ zobrazit odpovƒõƒè serveru
                if resp.text:
                    st.code(resp.text)
            else:
                st.error(f"‚ùå Chyba p≈ôi odes√≠l√°n√≠: HTTP {resp.status_code}")
                st.code(resp.text)
        except Exception as e:
            st.error(f"‚ùå V√Ωjimka p≈ôi odesl√°n√≠: {e}")

# Info
st.caption(
    "Pozn.: Obr√°zky v JSONu jsou base64. Pokud bude payload p≈ô√≠li≈° velk√Ω, zva≈æ ulo≈æen√≠ obr√°zk≈Ø do √∫lo≈æi≈°tƒõ (Drive/S3) a pos√≠lej jen URL.")
